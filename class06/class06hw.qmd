---
title: "class06HW"
format: pdf
author: Ilyas Darif A16577084
date: 4/18/22
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## A silly function
Lets write a function to add numbers. we can call `add()`

```{r}
x <- 10
y <- 1
x + y
```

```{r}
add <- function(x, y=10){
  x + y
}
```


can i just use the function?

```{r}
add(10)
```





```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

```

start with srudent1

```{r}
mean(student1)
```
```{r}
mean(student2, na.rm=TRUE)
```


```{r}
mean(student3, na.rm=TRUE)
```



ok lets try to work with student1 and find(and drop) the lowest score.

```{r}
min(student1)
```
```{r}
which.min(student1)
```
```{r}
student1[8]
```
```{r}
student1[which.min(student1)]
```

```{r}
student1[-8]
```

```{r}
mean(student1[ -which.min(student1) ])
```

```{r}
x <- student2
mean(x[ -which.min(x) ])
```

our aproach to the na problem (missing hws ): we can replace to na w 0



first task is find na

```{r}
x <- 
is.na(x)
```



```{r}
y <- 1:5
y
y[y>3] <- 0
y
```

i want t ocombine the `na.is(x)` with making these elements equal to zero 
and then take this "masked" (vector of student scores with na values of zero) and drop the lowest and get the mean

```{r}
x <- student3
x[is.na(x)] <- 0
mean(x[-which.min(x) ])
```








```{r}
grade <- function(scores) {
  #make na missing work equal to 0
scores[is.na(scores)] <- 0
# drop lowest score and get mean
mean(scores[-which.min(scores) ])
  
}
```


```{r}
grade(student1)
grade(student2)
grade(student3)
```
mean()
is.na()
min()
which.min()
apply.()
apply(gradebook, 1 #rows 2 #columns, FUN)

>Q1. Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
head(gradebook)
```


the `apply()` func in r is super useful but can be a little confusing to begin with 

```{r}
ans <- apply(gradebook, 1, grade)
ans
```
> Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]

```{r}
which.max(ans)
max(ans)
```



> Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall? [2pts]

```{r}
which.min(apply(gradebook, 2, mean, na.rm=TRUE))
```
> Q4. Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]


```{r}
#ans
cor(gradebook$hw1, ans)
```
```{r}
cor(gradebook$hw5, ans)
gradebook$hw5
```
```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
```


```{r}
cor(mask$hw5, ans)

```
now we can use `apply()` to examine the correlation of 

```{r}
apply(mask, 2, cor, y=ans)
```

mean()
is.na()
min()
which.min()
apply.()
apply(x (dataframe name)gradebook, 1 #rows or 2 #columns, FUN(function, extra arguments for fun))



> Q5. Make sure you save your Quarto document and can click the “Render” (or Rmarkdown”Knit”) button to generate a PDF foramt report without errors. Finally, submit your PDF
to gradescope. [1pt]

